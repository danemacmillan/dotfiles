# vim: ft=sh

##
# .path
#
# Central location for defining additional paths.
#
# @author Dane MacMillan <work@danemacmillan.com>
# @link https://github.com/danemacmillan/dotfiles
# @license MIT

##
# Store homebrew install path, if available.
if [[ -z ${HOMEBREW_INSTALL_PATH} ]]; then
	export HOMEBREW_INSTALL_PATH="$(command -v brew >/dev/null 2>&1 && brew --prefix)"
	export HOMEBREW_FORMULA_PATH="$([[ ! -z ${HOMEBREW_INSTALL_PATH} ]] && echo ${HOMEBREW_INSTALL_PATH}/opt)"
fi

# Common path, if not already included, and it exists.
[[ ":${PATH}:" != *":/usr/local/bin:"* ]] && [[ -e "/usr/local/bin" ]] && export PATH="/usr/local/bin:${PATH}"

##
# Reset base path if on MacOS, so nothing unusual finds its way into it.
# Note that this will also stick /usr/local/sbin into the path, but in a
# preferred location, instead of at the beginning.
if [[ -e "/etc/paths" ]]; then
	export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"
fi

if [[ -e "/Library/Frameworks/Mono.framework/Versions/Current/Commands" ]]; then
	export PATH="/Library/Frameworks/Mono.framework/Versions/Current/Commands:$PATH"
fi

##
# On MacOS, add GNU coreutils and other GNU tools to the path, instead of
# using the BSD ones that come with the distribution. Note that this may
# cause issues with some native applications. I've not experienced it, but
# it could happen. Also, this just assumes that if the coreutils package is
# installed, so are the other ones listed inside the conditional block.
if [[ -e "${HOMEBREW_FORMULA_PATH}/coreutils" ]] ; then
	export PATH="${HOMEBREW_FORMULA_PATH}/coreutils/libexec/gnubin:$PATH"
	export MANPATH="${HOMEBREW_FORMULA_PATH}/coreutils/libexec/gnuman:$MANPATH"

	export PATH="${HOMEBREW_FORMULA_PATH}/curl/bin:$PATH"
	export PATH="${HOMEBREW_FORMULA_PATH}/gnu-getopt/libexec/gnubin:$PATH"
	export PATH="${HOMEBREW_FORMULA_PATH}/grep/libexec/gnubin:$PATH"
	export MANPATH="${HOMEBREW_FORMULA_PATH}/grep/libexec/gnuman:$MANPATH"
	export PATH="${HOMEBREW_FORMULA_PATH}/gnu-indent/libexec/gnubin:$PATH"
	export PATH="${HOMEBREW_FORMULA_PATH}/gnu-sed/libexec/gnubin:$PATH"
	export PATH="${HOMEBREW_FORMULA_PATH}/gnu-tar/libexec/gnubin:$PATH"
fi

##
# PHP 7.1, if it is installed. Note that if a user has 7.2 installed, this will
# supersede it.
if [[ -d "/usr/local/opt/php@7.1/bin" ]]; then
	export PATH="/usr/local/opt/php@7.1/bin:${PATH}"
fi

if [[ -d "/usr/local/opt/php@7.1/sbin" ]]; then
	export PATH="/usr/local/opt/php@7.1/sbin:${PATH}"
fi

##
# MySQL 5.6
if [[ -d "/usr/local/opt/mysql@5.6/bin" ]]; then
	export PATH="/usr/local/opt/mysql@5.6/bin:$PATH"
fi

# Source google-cloud-sdk gcloud utilities
# https://cloud.google.com/sdk/docs/quickstarts
if [[ -e "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc" ]]; then
	source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc
fi

if [[ -d "${HOME}/google-cloud-sdk/bin" ]]; then
	export PATH="${HOME}/google-cloud-sdk/bin:${PATH}"
fi

##
# Go lang binaries
if [[ -d "${HOME}/go" ]]; then
	export PATH="${HOME}/go/bin:${PATH}"
	export GOPATH="${HOME}/go"
fi

##
# Rust
if [[ -d "${HOME}/.cargo/bin" ]]; then
	export PATH="${HOME}/.cargo/bin:${PATH}"
fi

##
# Composer global installs
if [[ -d "${HOME}/.composer/vendor/bin" ]]; then
	export PATH="${HOME}/.composer/vendor/bin:${PATH}"
fi
if [[ -d "${XDG_CONFIG_HOME}/composer/vendor/bin" ]]; then
	export PATH="${XDG_CONFIG_HOME}/composer/vendor/bin:${PATH}"
fi

##
# Add this dotfiles repo's bin to path.
if [[ -e "${DOTFILES_PATH}" ]]; then
	export PATH="${DOTFILES_PATH}/bin:${PATH}"
fi

##
# Add user bin.
# This one should always be last, as it should be able to overwrite everything.
if [[ -d "${HOME}/bin" ]]; then
	export PATH="${HOME}/bin:${PATH}"
fi

