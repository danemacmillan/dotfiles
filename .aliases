# .aliases

# Make sure no other dotfiles script exists.
unalias dotfiles 2&>/dev/null

# Navigational
alias ll='ls --color -lah --group-directories-first'
alias llt='ls --color -laht --group-directories-first' # Sort by newest first.
alias ..='cd ..'
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
#alias imgls="imgls *.jpg *.jpeg *.gif *.png"

# Filesystem
alias rm='rm -rf'
# Note that -a is recursive, and, more importantly, preserves all ACLs, should
# any be set on the directory being copied.
# http://unix.stackexchange.com/a/43608
alias cp="cp -a"
# DO NOT EVER ALIAS mkdir with -p parents option. IT WILL BREAK INHERITED ACL
# PERMISSIONS.
# http://serverfault.com/questions/197263/conflicts-between-acls-and-umask
# http://savannah.gnu.org/bugs/?19546
# http://debbugs.gnu.org/cgi/bugreport.cgi?bug=14371
#alias mkdir="mkdir -p"
alias du="du -h --time"
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"
#alias ag='ag -lfi --hidden --numbers --column --stats'
alias belinux="find . -type f -exec dos2unix {} \;"
alias elcapinstallercreate="sudo /Applications/Install\ OS\ X\ El\ Capitan.app/Contents/Resources/createinstallmedia --volume /Volumes/ElCapInstaller --applicationpath /Applications/Install\ OS\ X\ El\ Capitan.app --nointeraction"

#Network
#alias listen='lsof -i -P | grep LISTEN'
alias listen='lsof -Pnl +M -i4'
alias nsp='netstat -tulpn'
alias ss='lsof -i'
alias ipp="dig +short myip.opendns.com @resolver1.opendns.com"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"
alias vs="vagrant global-status --prune"
# See http://ipinfo.io/developers for more info.
alias ipgeo="curl ipinfo.io"
alias vmt="/usr/bin/vmware-toolbox-cmd"
alias flushdns='sudo killall -HUP mDNSResponder'

# Misc
alias c='clear'
alias vi='vim'
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'
#alias mysql='mycli'
alias how='vi ${HOME}/.dotfiles/HOWDOI.md'
# https://twitter.com/liamosaur/status/506975850596536320?lang=en
alias fu='sudo $(history -p \!\!)'

# Complete nonsense
alias fuuu='imgcat $HOME/.dotfiles/img/hacking.gif'

# Server
# Get the number of php-fpm processes, and their average size in MB.
#alias fpmstat='ps aux | grep php-fpm | wc -l ; ps --no-headers -o "rss,cmd" -C php-fpm | awk '{ sum+=$1 } END { printf ("%d%s\n", sum/NR/1024,"M") }'
alias fpmstat="ps aux | grep php-fpm | wc -l ; ps --no-headers -o \"rss,cmd\" -C php-fpm | awk '{ sum+=\$1 } END { printf (\"%d%s\n\", sum/NR/1024,\"M\") }'"

# Git
# just for reference. Do not rewrite history.
#alias grewritelast='GIT_COMMITTER_DATE="$(date -d \'24 hours ago\')" git commit --amend --date "$(date -d \'24 hours ago\')" && git push --force'
alias gco="git checkout"
alias gp="git pull"
alias gpp="git push"
alias gc="git commit"

# Mitigate fat-fingering and other retardations.
alias gut="git"
alias kk="ll"

# History
# Purge all history
alias historypurgeall='cat /dev/null > ~/.bash_history && history -c && history -w'
# Source: http://thoughtsbyclayg.blogspot.ca/2008/02/how-to-delete-last-command-from-bash.html
alias historypurgelast='history -d $((HISTCMD-2)) && history -d $((HISTCMD-1))'

# PHP
# Note: this is very specific to my standard virtual machine. Change domain.
alias phpdebug='PHP_CLI_DEBUG="true" PHP_IDE_CONFIG="serverName=develop.vagrant.dev" $(which php) -d "xdebug.idekey=PHPSTORM" -d "xdebug.remote_host=10.0.2.2" -d "xdebug.remote_port=9000" -d "xdebug.remote_enable=1" -d "xdebug.remote_autostart=1" -d "xdebug.remote_handler=dbgp"'
#alias phpdebug='PHP_IDE_CONFIG="serverName=develop.vagrant.dev" $(which php) -d "xdebug.idekey=PHPSTORM" -d "xdebug.remote_host=192.168.80.1" -d "xdebug.remote_port=9000" -d "xdebug.remote_enable=1" -d "xdebug.remote_autostart=1" -d "xdebug.remote_handler=dbgp"'


