## .functions


## 
# Loop through all subdirectories and run the given command."
loop() {
	if [[ -z $1 ]]; then
		echo -e "Loop through all subdirectories of the current directory and run"
		echo -e "the given commands.\n"
		echo -e "Example usage:\n"
		echo '  loop "touch notes.txt"'
		echo '  loop "git pull" "git push"'
		echo ""
		return
	fi
	
	# Fancy up the message.
	SYMBOL1="->"
	SYMBOL2="+"
	if [[ $OS == 'osx' ]]; then
		SYMBOL1="üåÄ "
		SYMBOL2="‚ö°Ô∏è"
	fi

	for subdirectory in ./*; do
		echo -e "\n$SYMBOL1 Running commands in \x1B[36m$subdirectory\x1B[0m."
		for argument in "$@"; do
			echo -e "   $SYMBOL2 \x1B[31;1m$argument\x1B[0m"
			(cd "$subdirectory" && $argument|sed 's/^/          /')
		done
	done

	echo -e ""
}


## 
# Usage: extract <file>
# Description: extracts archived files / mounts disk images
# Note: .dmg/hdiutil is Mac OS X-specific.
# credit: https://github.com/holman/dotfiles
extract () {
	if [ -f $1 ]; then
		case $1 in
			*.tar.bz2)  tar -jxvf $1 ;;
			*.tar.gz)   tar -zxvf $1 ;;
			*.bz2)      bunzip2 $1 ;;
			*.dmg)      hdiutil mount $1 ;;
			*.gz)       gunzip $1 ;;
			*.tar)      tar -xvf $1 ;;
			*.tbz2)     tar -jxvf $1 ;;
			*.tgz)      tar -zxvf $1 ;;
			*.zip)      unzip $1 ;;
			*.ZIP)      unzip $1 ;;
			*.pax)      cat $1 | pax -r ;;
			*.pax.Z)    uncompress $1 --stdout | pax -r ;;
			*.Z)        uncompress $1 ;;
			*)          echo "'$1' cannot be extracted/mounted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}


## 
# When in tmux, start irssi and nicklist will appear in side pane.
#
# Note: I'm using weechat now, which is much better than irssi. I will keep 
# this here, as it was a pain to actually figure out with tmux.
# Based on http://clusterfuck.logdown.com/posts/52323-when-irssi-meets-tmux
# create the pane with irssi's nicklist
function irssi_nickpane() {
	tmux renamew irssi # name the window
	tmux -q setw main-pane-width $(( $(tput cols) - 21)) # set the main pane width to the total width-20
	tmux splitw -v "cat ~/.irssi/nicklistfifo" # create the window and begin reading the fifo
	tmux -q selectl main-vertical # assign the layout
	tmux selectw -t irssi # select window 'irssi'
	tmux selectp -t 1 # select pane 0
	tmux send-keys -t 1 "/nicklist fifo" C-m
}
# irssi wrapper
# Note: only run this within tmux, otherwise nicklist will run silently
# and invisibly.
function irssi() {
	# Load nicklist in side pane if in a tmux session.
	if [ -n "$TMUX" ]; then
		irssi_nickpane
	fi;
	# Otherwise just irssi as usual.
	$(which irssi)
}
# repair running irssi's nicklist pane
function irssi_repair() {
    tmux selectw -t irssi
    tmux selectp -t 1
    tmux killp -a # kill all panes
    irssi_nickpane
}