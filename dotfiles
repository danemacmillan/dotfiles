#!/usr/bin/env bash
source "${HOME}/.dotfiles/.dotfiles_includes"

##
# Dotfiles - dotfiles
#
# The purpose of this script is to bootstrap the dotfiles dependencies and
# provide a quick utility for updating them.
#
# @author Dane MacMillan <work@danemacmillan.com>
# @link https://github.com/danemacmillan/dotfiles
# @license MIT
#
# @TODO
#  - abstract into function.
#  - do symlinking with cp command so no need to manually track files.
#  - verify vimperator config directory.

##
# Cleanup any legacy associations from older versions of this dotfiles repo.
unalias dotfiles 2&>/dev/null
rm "${HOME}/.dfconfig" 2&>/dev/null
symlinks -d "${HOME}" 2&>/dev/null

##
# Update repo from upstream.
echo -e "${BLUE}${BOLD}Updating dotfiles.${RESET}"
(cd "${DOTFILES_DIRECTORY}" && git stash && git pull && git stash pop)

##
# Create directories that will not be tracked by the repo.
#
# Their contents could be via symlinks from `.dotfiles/*`, though.
if [[ ! -d "${HOME}/.config/htop" ]]; then
	echo -e "${RESET}${BLUE}${BOLD}Creating '${HOME}/.config/htop' directory.${RESET}"
	mkdir -p "${HOME}/.config/htop"
fi

if [[ ! -d "${HOME}/.ssh" ]]; then
	echo -e "${RESET}${BLUE}${BOLD}Creating '${HOME}/.ssh' directory.${RESET}"
	mkdir -p "${HOME}/.ssh"
fi

if [[ ! -d "${HOME}/bin" ]]; then
	echo -e "${RESET}${BLUE}${BOLD}Creating '${HOME}/bin' directory.${RESET}"
	mkdir -p "${HOME}/bin"
fi

if [[ ! -d "${HOME}/tmp" ]]; then
	echo -e "${RESET}${BLUE}${BOLD}Creating '${HOME}/tmp' directory.${RESET}"
	mkdir -p "${HOME}/tmp"
fi

if [[ ! -d "${DPM_INSTALL_DIRECTORY}" ]]; then
	echo -e "${RESET}${BLUE}${BOLD}Creating '${DPM_INSTALL_DIRECTORY}' directory.${RESET}"
	mkdir -p "${DPM_INSTALL_DIRECTORY}"
fi

##
# Copy file templates that will not be tracked by the repo.
if [[ ! -f "${HOME}/.extra" ]]; then
	echo -e "${BLUE}${BOLD}Copying '.extra' template file for custom dotfiles edits that will not be tracked.${RESET}"
	cp -v "${DOTFILES_DIRECTORY}/.extra" "${HOME}/.extra"
fi

if [[ ! -f "${HOME}/.gitconfig.local" ]]; then
	echo -e "${BLUE}${BOLD}Copying '.gitconfig.local' template file for custom changes. Add your Git credentials here.${RESET}"
	cp -v "${DOTFILES_DIRECTORY}/.gitconfig.local" "${HOME}/.gitconfig.local"
fi

if [[ ! -f "${HOME}/.hgrc.local" ]]; then
	echo -e "${BLUE}${BOLD}Copying '.hgrc.local' template file for custom changes. Add your Mercurial credentials here.${RESET}"
	cp -v "${DOTFILES_DIRECTORY}/.hgrc.local" "${HOME}/.hgrc.local"
fi

if [[ ! -f "${HOME}/.ssh/config" ]]; then
	echo -e "${BLUE}${BOLD}Copying '.ssh/config' template file for custom SSH credentials.${RESET}"
	cp -v "${DOTFILES_DIRECTORY}/.ssh/config" "${HOME}/.ssh/config"
fi

##
# Symlink all trackable files.
#
# Note that not all files within the `.dotfiles` directory are symlinked into
# the user home directory, as they are only used internally by these dotfiles.
echo -e "${RESET}${BLUE}${BOLD}Symlinking dotfiles.${RESET}${GREEN}${DIM}"
ln -vsfn ${DOTFILES_DIRECTORY}/bin/* "${HOME}/bin/"
ln -vsfn "${DOTFILES_DIRECTORY}/.config/htop/htoprc" "${HOME}/.config/htop/htoprc"
ln -vsfn "${DOTFILES_DIRECTORY}/.ssh/rc" "${HOME}/.ssh/rc"
ln -vsfn "${DOTFILES_DIRECTORY}/.agignore" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.aliases" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.bash_completion" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.bash_profile" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.bash_sessions_disable" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.bashrc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.ctags" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.digrc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.editorconfig" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.formatting" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.functions" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.gitconfig" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.gitignore" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.grcat" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.hgrc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.hushlogin" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.inputrc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.mozconfig" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.my.cnf" "${HOME}/.my.cnf.sample"
ln -vsfn "${DOTFILES_DIRECTORY}/.myclirc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.mytop" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.nix" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.npmrc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.osx" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.path" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.rsync_excludes" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.siegerc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.tmux.conf" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.vimperatorrc" "${HOME}/"
ln -vsfn "${DOTFILES_DIRECTORY}/.vimrc" "${HOME}/"

## TODO FIX vim and weechat mv error. Handle vundle missing bundle directory.
## Update install script and readme.
## http://stackoverflow.com/questions/4642915/passing-parameters-to-bash-when-executing-a-script-fetched-by-curl

##
# Symlink trackable directories that could exist, and back up to `tmp`.
#mv -f "${HOME}/.vim" "${HOME}/tmp/.vim-$(now)" \
ln -vsfn "${DOTFILES_DIRECTORY}/.vim" "${HOME}/"

#mv -f "${HOME}/.weechat" "${HOME}/tmp/.weechat-$(now)" \
ln -vsfn "${DOTFILES_DIRECTORY}/.weechat" "${HOME}/"

##
# Add `dotfiles` and `dpm` executable scripts into `~/bin`.
if [[ ! -f "$HOME/bin/dotfiles" ]]; then
	ln -vsfn "${DOTFILES_DIRECTORY}/dotfiles" "${HOME}/bin/"
fi

if [[ ! -f "$HOME/bin/dpm" ]]; then
	ln -vsfn "${DOTFILES_DIRECTORY}/dpm" "${HOME}/bin/"
fi

##
# Install dotfiles package manager packages.
#dpm --install
source "${DOTFILES_DIRECTORY}/dpm" --install

##
# Update terminal
echo -e "${BLUE}${BOLD}Updating terminal with new profile.${RESET}"
source "${HOME}/.bash_profile"
echo -e "${WHITE}${BOLD}Done!${RESET}"
