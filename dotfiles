#!/usr/bin/env bash

##
# Dotfiles - dotfiles
#
# The purpose of this script is to bootstrap the dotfiles dependencies and
# provide a quick utility for updating them.
#
# @author Dane MacMillan <work@danemacmillan.com>
# @link https://github.com/danemacmillan/dotfiles
# @license MIT
#
# @TODO pass flags to distinguish pure dev builds from full setups.

# Pull in base formatting templates.
if [ -f ~/.dotfiles/.formatting ]; then
	source ~/.dotfiles/.formatting
fi

# Pull in base functions.
if [ -f ~/.dotfiles/.functions ]; then
	source ~/.dotfiles/.functions
fi

# Update from upstream.
echo -e "${BLUE}${BOLD}Updating dotfiles.${RESET}"
(cd ~/.dotfiles/ && git stash && git pull && git stash pop)


##
# Install them
#
# TODO abstract into function.

# TODO do symlinking with cp command so no need to manually track files.

# TODO verify vimperator config directory.


# Create directory where htoprc file will be located.
if [[ ! -d "$HOME/.config/htop" ]]; then
	mkdir -pv "$HOME/.config/htop"
fi

# Install
echo -e "${RESET}${BLUE}${BOLD}Symlinking dotfiles.${RESET}${GREEN}${DIM}"
ln -vsfn ~/.dotfiles/.aliases ~/
ln -vsfn ~/.dotfiles/.agignore ~/
ln -vsfn ~/.dotfiles/.bash_completion ~/
ln -vsfn ~/.dotfiles/.bash_profile ~/
ln -vsfn ~/.dotfiles/.bash_sessions_disable ~/
ln -vsfn ~/.dotfiles/.bashrc ~/
ln -vsfn ~/.dotfiles/.ctags ~/
ln -vsfn ~/.dotfiles/.digrc ~/
ln -vsfn ~/.dotfiles/.formatting ~/
ln -vsfn ~/.dotfiles/.functions ~/
ln -vsfn ~/.dotfiles/.gitconfig ~/
ln -vsfn ~/.dotfiles/.gitignore ~/
ln -vsfn ~/.dotfiles/.grcat ~/
ln -vsfn ~/.dotfiles/.inputrc ~/
ln -vsfn ~/.dotfiles/.hgrc ~/
ln -vsfn ~/.dotfiles/.siegerc ~/
ln -vsfn ~/.dotfiles/.tmux.conf ~/
ln -vsfn ~/.dotfiles/.mozconfig ~/
ln -vsfn ~/.dotfiles/.my.cnf ~/.my.cnf.sample
ln -vsfn ~/.dotfiles/.myclirc ~/
ln -vsfn ~/.dotfiles/.npmrc ~/
ln -vsfn ~/.dotfiles/.nix ~/
ln -vsfn ~/.dotfiles/.osx ~/
ln -vsfn ~/.dotfiles/.paths ~/
ln -vsfn ~/.dotfiles/.sshmotd ~/
ln -vsfn ~/.dotfiles/.rsync-excludes ~/
ln -vsfn ~/.dotfiles/.vimperatorrc ~/
ln -vsfn ~/.dotfiles/.vimrc ~/
ln -vsfn ~/.dotfiles/.config/htop/htoprc ~/.config/htop/htoprc
rm -rf ~/.vim && ln -vsfn ~/.dotfiles/.vim ~/
rm -rf ~/.weechat && ln -vsfn ~/.dotfiles/.weechat ~/

if [ -d "$HOME/.ssh" ]; then
	ln -vsfn ~/.dotfiles/.ssh/rc ~/.ssh/rc
fi

# Create user bin directory if it doesn't exist.
if [ ! -d "$HOME/bin" ]; then
	echo -e "${RESET}${BLUE}${BOLD}Creating user bin directory for extra PATH.${RESET}"
	mkdir $HOME/bin
fi

# Create user tmp directory if it doesn't exist.
if [ ! -d "$HOME/tmp" ]; then
	echo -e "${RESET}${BLUE}${BOLD}Creating user tmp directory.${RESET}"
	mkdir $HOME/tmp
fi

# Symlink local bin files.
ln -vsfn ~/.dotfiles/bin/* ~/bin/

# Make dotfiles script available in user's path.
if [ ! -f "$HOME/bin/dotfiles" ]; then
	ln -vsfn ~/.dotfiles/dotfiles ~/bin
	chmod u+x ~/bin/dotfiles
fi

# Make dpm script available in user's path.
if [[ ! -f "$HOME/bin/dpm" ]]; then
	ln -vsfn ~/.dotfiles/dpm ~/bin
	chmod u+x ~/bin/dpm
fi

# Create optional .extra file to be sourced along repo content.
if [ ! -f ~/.extra ]; then
	echo -e "${BLUE}${BOLD}Generating .extra file.${RESET}"
	touch ~/.extra
fi

# Create .gitconfig.local file to hold user credentials for Git.
if [ ! -f ~/.gitconfig.local ]; then
	echo -e "${BLUE}${BOLD}Generating .gitconfig.local file for custom changes. Add your Git credentials here.${RESET}"
	cat >>~/.gitconfig.local <<EOL
[user]
	name =
	email =
EOL
fi

# Create .hgrc.local file to hold user credentials for Mercurial.
if [ ! -f ~/.hgrc.local ]; then
	echo -e "${BLUE}${BOLD}Generating .hgrc.local file for custom changes. Add your Mercurial credentials here.${RESET}"
	cat >>~/.hgrc.local <<EOL
[ui]
username = First Last <you@domain.tld>
EOL
fi

# Generate .ssh/config file if none.
if [ ! -f "$HOME/.ssh/config" ]; then
	# Create directory regardless, just to be sure.
	mkdir -pv $HOME/.ssh
	# Default content
	cat >>$HOME/.ssh/config <<EOL
# See for reference:
# https://www.freebsd.org/cgi/man.cgi?query=ssh_config&sektion=5
# http://www.openssh.com/faq.html#3.14

Host *
	TCPKeepAlive yes
	ServerAliveInterval 120
	PreferredAuthentications publickey,password
	Protocol 2
	Compression yes
	LogLevel VERBOSE
	ForwardX11 yes
	IdentityFile $HOME/.ssh/id_rsa
	#Hostname
	#Port
	#User
EOL
fi

# Install dotfiles package manager packages.
dpm --install

# Update terminal
echo -e "${BLUE}${BOLD}Updating terminal with new profile.${RESET}"
source ~/.bash_profile;

echo -e "${WHITE}${BOLD}Done!${RESET}"
