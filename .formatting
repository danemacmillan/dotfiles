##
# Color variables and functions to be used throughout bash.
# There are often-used symbols at the bottom.

# Escape sequences are: \e, \033, \x1B
# This one (\x1B) works across OSX, Unix, Linux, while the other two do not.
# Bash 4.1 supports \e
#ESC="\e"

# https://wiki.archlinux.org/index.php/Color_Bash_Prompt
colors() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37} # white
			bgc=${bgc#40} # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}

			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf " ${seq0}TEXT\e[m"
			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}

# http://misc.flogisoft.com/bash/tip_colors_and_formatting
clbg() {
	for clbg in {40..47} {100..107} 49 ; do
		#Foreground
		for clfg in {30..37} {90..97} 39 ; do
			#Formatting
			for attr in 0 1 2 4 5 7 ; do
				#Print the result
				echo -en "\e[${attr};${clbg};${clfg}m ^[${attr};${clbg};${clfg}m \e[0m"
			done
			echo #Newline
		done
	done
}

# http://misc.flogisoft.com/bash/tip_colors_and_formatting
fgbg() {
	for fgbg in 38 48 ; do #Foreground/Background
		for color in {0..256} ; do #Colors
			#Display the color
			echo -en "\e[${fgbg};5;${color}m ${color}\t\e[0m"
			#Display 10 colors per lines
			if [ $((($color + 1) % 10)) == 0 ] ; then
				echo #New line
			fi
		done
		echo #New line
	done
}


## Color variables
# Note, if you want to mix multiple formatting options, the color MUST ALWAYS
# precede the actual formatting. For example:
# echo -e ${PURPLE}${BOLD}${UNDERLINE}Hiiiyooooo


# Formatting
RESET="\e[0m"
BOLD="\e[1m"
DIM="\e[2m"
UNDERLINE="\e[4m"
BLINK="\e[5m"
REVERSE="\e[7m"
HIDDEN="\e[8m"

##
# Based on:
# https://wiki.archlinux.org/index.php/Color_Bash_Prompt#Load.2FMem_Status_for_256colors

# Regular Colors
BLACK="\e[0;30m"
RED="\e[0;31m"
GREEN="\e[0;32m"
YELLOW="\e[0;33m"
BLUE="\e[0;34m"
PURPLE="\e[0;35m"
CYAN="\e[0;36m"
WHITE="\e[0;37m"

# Bold
BBLACK="\e[1;30m"
BRED="\e[1;31m"
BGREEN="\e[1;32m"
BYELLOW="\e[1;33m"
BBLUE="\e[1;34m"
BPURPLE="\e[1;35m"
BCYAN="\e[1;36m"
BWHITE="\e[1;37m"

# Underline
UBLACK="\e[4;30m"
URED="\e[4;31m"
UGREEN="\e[4;32m"
UYELLOW="\e[4;33m"
UBLUE="\e[4;34m"
UPURPLE="\e[4;35m"
UCYAN="\e[4;36m"
UWHITE="\e[4;37m"

# High Intensity
IBLACK="\e[0;90m"
IRED="\e[0;91m"
IGREEN="\e[0;92m"
IYELLOW="\e[0;93m"
IBLUE="\e[0;94m"
IPURPLE="\e[0;95m"
ICYAN="\e[0;96m"
IWHITE="\e[0;97m"

# Bold High Intensity
BIBLACK="\e[1;90m"
BIRED="\e[1;91m"
BIGREEN="\e[1;92m"
BIYELLOW="\e[1;93m"
BIBLUE="\e[1;94m"
BIPURPLE="\e[1;95m"
BICYAN="\e[1;96m"
BIWHITE="\e[1;97m"

# High Intensity backgrounds
BG_IBLACK="\e[0;100m"
BG_IRED="\e[0;101m"
BG_IGREEN="\e[0;102m"
BG_IYELLOW="\e[0;103m"
BG_IBLUE="\e[0;104m"
BG_IPURPLE="\e[0;105m"
BG_ICYAN="\e[0;106m"
BG_IWHITE="\e[0;107m"

# Background
BG_BLACK="\e[40m"
BG_RED="\e[41m"
BG_GREEN="\e[42m"
BG_YELLOW="\e[43m"
BG_BLUE="\e[44m"
BG_PURPLE="\e[45m"
BG_CYAN="\e[46m"
BG_WHITE="\e[47m"


##
# Formatting symbols


# Fancy up output.
SWIRL="->"
BOLT="+"
if [[ $OS == 'osx' ]]; then
	SWIRL="ЁЯМА "
	BOLT="тЪбя╕П"
fi
