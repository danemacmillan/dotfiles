[mysql]

pager = grcat ~/.grcat

##
# GENERAL
#
#port = 3306
#user = mysql
#default-storage-engine = InnoDB
#socket = /var/lib/mysql/mysql.sock
#pid-file = /var/lib/mysql/mysql.pid
#wait-timeout = 300
#skip-name-resolve
#tmpdir = /dev/shm
#explicit_defaults_for_timestamp = 1
#datadir=/home/mysql

##
# LOGGING
#
general_log = 0
#general_log_file = /var/log/mysql/mysql.log

slow_query_log = 0
#slow_query_log-file = /var/log/mysql/mysql-slow.log
#long_query_time = 5
#log-queries-not-using-indexes = 0

#log_error = /var/log/mysql/mysql-error.log
# There are a tonne of warnings generated with our codebase.
#log_warnings = 0


##
# MyISAM
#
key-buffer-size = 32M
##deprecated: myisam-recover = FORCE,BACKUP
myisam-recover-options = FORCE,BACKUP
myisam-sort-buffer-size = 64M

key-buffer-size = 256M
join-buffer-size = 4M
read-buffer-size = 4M
read-rnd-buffer-size = 16M
sort-buffer-size = 2M
table-open-cache = 8192
thread-cache-size = 512
tmp-table-size = 384M
max-heap-table-size = 384M

##
# SAFETY
#
max-allowed-packet = 256M
max-connect-errors = 1000000
# User home dir is symlinked to /var/lib/mysql
symbolic-links = 1

##
# BINARY LOGGING
#
# Note: this is only really necessary when using replication, but also to
# replay operations since backup over the backup file. Read:
# http://dba.stackexchange.com/questions/47046/why-do-the-mysql-bin-log-files-still-exist-after-a-purge-or-flush
#log-bin = /home/mysql/mysql-bin
#expire-logs-days = 2
#sync-binlog = 1

##
# CACHES AND LIMITS
#
tmp-table-size = 32M
max-heap-table-size = 32M
query-cache-type = 0
query-cache-size = 0
max-connections = 600
thread-cache-size = 50
open-files-limit = 65535
table-definition-cache = 4096
table-open-cache = 4096

##
# INNODB
#
innodb-flush-method = O_DIRECT
innodb-log-files-in-group = 2
innodb-log-file-size = 512M
innodb-flush-log-at-trx-commit = 1
innodb-open-files = 655350
innodb-buffer-pool-size = 2G
# see ERROR 1114 (HY000) at line 14829: The table  is full
#innodb_data_file_path = ibdata1:10M:autoextend
# The above is not necessary as tables are stored per file, which also makes
# backups easier to perform.
innodb-file-per-table = 1
# http://dba.stackexchange.com/questions/2918/about-single-threaded-versus-multithreaded-databases-performance/2948#2948
innodb-thread-concurrency = 0
innodb-concurrency-tickets = 900
innodb-commit-concurrency = 0
innodb-thread-sleep-delay = 10000
innodb-log-buffer-size = 64M
##deprecated: innodb-additional-mem-pool-size = 16M
innodb-io-capacity = 800
##innodb-flush-neighbor-pages = cont
innodb-lock-wait-timeout = 120
innodb-buffer-pool-instances = 4
innodb-read-io-threads = 64
innodb-write-io-threads = 64
innodb-flush-log-at-trx-commit = 1
# https://forums.cpanel.net/threads/starting-mysql-error-the-server-quit-without-updating-pid-file.402772/
#innodb_use_native_aio = 0

# http://serverfault.com/questions/547438/mysqldump-has-a-quick-option-why-isnt-this-enabled-by-default
# Note: mysql opt is on by default, which includes quick. If you ever have
# issues dumping, it might be because all inserts are in a single statement,
# which can be very memory intensive. Keep here for reference.
#[mysqldump]
#quick


[client]
pager = grcat ~/.grcat

max_allowed_packet = 256M
wait-timeout = 300