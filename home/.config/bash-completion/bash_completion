# vim: ft=sh

##
# bash_completion
#
# This includes third-party bash completion scripts that are eagerly loaded.
#
# IMPORTANT: Do not add new completions here!
#
# This file only exists for backwards-compatibility with bash_completion prior
# to version 2, which only supported eager loading of completions. For all new
# completions to take advantage of non-eager loading, add them to the following
# directory: ${XDG_DATA_HOME}/bash-completion/completions
#
# Read more about this:
# - https://github.com/scop/bash-completion#faq
# - https://github.com/scop/bash-completion/blob/master/bash_completion#L2034
# - https://github.com/scop/bash-completion/blob/master/doc/bash_completion.txt
#
# @author Dane MacMillan <work@danemacmillan.com>
# @link https://github.com/danemacmillan/dotfiles
# @license MIT

# fzf completions and keybindings.ss
# https://github.com/junegunn/fzf#installation
[[ $- == *i* ]] && source "${NIX_PROFILE_USER_PATH}/share/fzf/completion.bash" 2> /dev/null
bind -x '"\C-p": vim $(fzf);'
source "${NIX_PROFILE_USER_PATH}/share/fzf/key-bindings.bash"

# Source old Homebrew COMPAT completions manually.
#
# The BASH_COMPLETION_COMPAT_DIR variable is being used for Nix for the odd
# completion file that does not support non-eager completion, so these are the
# last remnants from Homebrew that can be sourced manually, as there can only
# be one COMPAT directory.
#
# This logic is completely lifted from bash_completion.sh itself, with only
# a path change made. See the end of that file.
compat_dir="${HOMEBREW_INSTALL_PATH}/etc/bash_completion.d"
if [[ -d $compat_dir && -r $compat_dir && -x $compat_dir ]]; then
    for i in "$compat_dir"/*; do
        [[ ${i##*/} != @($_backup_glob|Makefile*|$_blacklist_glob) && -f \
        $i && -r $i ]] && . "$i"
    done
fi
unset compat_dir i _blacklist_glob
